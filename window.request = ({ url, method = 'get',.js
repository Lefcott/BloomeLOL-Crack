window.request = ({ url, method = 'get', params = {}, body = {}, headers = {} }) =>   new Promise(resolve => {     if (!url) {       console.error('No url provided');       return resolve(null);     }     const keys = Object.keys(params);     let search = '';     for (let i = 0; i < keys.length; i += 1) {       let concatChar = i === 0 ? '?' : '&';       const key = keys[i];       const value = params[key];       if (Array.isArray(value))         for (let ii = 0; ii < value.length; ii += 1) {           search += `${concatChar}${key}=${value[ii]}`;           concatChar = '&';         }       else search += `${concatChar}${key}=${window.encodeURIComponent(value)}`;     }     url = `${url}${search}`;     body = ['get', 'head'].includes(method.toLowerCase()) ? undefined : JSON.stringify(body);     headers['Content-Type'] = headers['Content-Type'] || 'application/json';      fetch(new Request(url, { method, body, headers }))       .then(async Res => {         const Res2 = Res.clone();         const json = await new Promise(resolveJson =>           Res.json()             .then(resolveJson)             .catch(() => resolveJson(null))         );         resolve({           body: json || (await Res2.text()),           status: Res.status         });       })       .catch(error => {         console.error(error);         resolve(null);       });   });